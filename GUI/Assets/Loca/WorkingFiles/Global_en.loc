ConstantA { Names an object with the selected constant.<n>Can occur only once in the world.}
ConstantB { Names an object with the selected constant.<n>Can occur only once in the world. }
ConstantC { Names an object with the selected constant.<n>Can occur only once in the world.}
ConstantD { Names an object with the selected constant.<n>Can occur only once in the world.}
ConstantE { Names an object with the selected constant.<n>Can occur only once in the world.}
ConstantF { Names an object with the selected constant.<n>Can occur only once in the world.}

Cube { Cube}
Tet { Tetraeder}
Dodec { Dodecaeder}
Small { Small}
Medium { Medium}
Large { Large}

ChangeDimension {Change the perspective between 2D and 3D.}
Pl1StructureView {Shows the model representation of the world.}
GameView {Starts the game.}

CheckAllButton {Validate all sentences.}
DeleteOneButton {Delete one sentence.}
CreateNewSentences {Create one sentence.}

TetPredicate        {Tet(a): The object a is a tetraeder.}
SmallPredicate      {Small(a): The object a is small.}
LeftOfPredicate     {LeftOf(a,b): The object a is left of object b.}
SameColPredicate    {SameCol(a,b): The objects a and b are on the same column.}
SmallerPredicate    {Smaller(a,b): The object a is smaller then object b.}
CubePredicate       {Cube(a): The object a is a cube.}
MediumPredicate     {Medium(a): The object a is of medium size.}
RightOfPredicate    {RightOf(a,b): The object a is right of object b.}
SameRowPredicate    {SameRow(a,b): The objects a and b are on the same row.}
LargerPredicate     {Larger(a,b): The object a is larger then object b.}
DodecPredicate      {Dodec(a): The object a is a dodecaeder.}
LargePredicate      {Large(a): The object a is large.}
FrontOfPredicate    {FrontOf(a,b): The object a is in front of object b.}
BetweenPredicate    {Between(a,b,c): The object a is between object b and object c.}
SameSizePredicate   {SameSize(a,b): The objects a and b have the same size.}
SameShape           {SameShape(a,b): The objects a and b have the same shape.}
BackOf              {BackOf(a,b): The object a is in back of object b.}
Adjoins             {Adjoins(a,b): The objects a and b are neighbours.}

lmFunction          {lm(a): Returns an object, which is leftmost of object a.}
rmFunction          {rm(a): Returns an object, which is rightmost of object a.}
fmFunction          {fm(a): Returns an object, which is frontmost of object a.}
bmFunction          {bm(a): Returns an object, which is backmost of object a.}

andOperator          {The conjunction.}
orOperator          {The disjunction.}
negateOperator          {The negation.}
impliesOperator          {The implication.}
isequivalentOperator          {The biconditional.}
falsumOperator          {False.}

allQuantum          {The allquantum.}
existQuantum          {The existquantom.}
equalsOperator          {Equivalent.}
doesNotEqualOperator          {The negation of equivalent.}
leftParanthesisOperator          {Open bracket.}
rightParanthesisOperator          {Closed bracket.}
constant          {A constant.}
variable          {A variable.}

Save          {Saves the world or/and the sentences.}
Load          {Loads a world or sentences.}